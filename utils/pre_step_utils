#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os, sys
import argparse
import subprocess


class ActionList(object):
    @classmethod
    def create_big_backup_file(self):
        backup_file_path = '/var/backups/pf-xivo/test_big_file.tgz'
        cmd = ['dd', 'if=/dev/zero', 'of=%s' % backup_file_path, 'bs=1024', 'count=200240']
        subprocess.call(cmd)
        os.chown(backup_file_path, 0, 33)
        os.chmod(backup_file_path, 0640)


def touch(filename):
    open(filename, 'w+').close()


def main():
    args = _parse_args(sys.argv[1:])

    try:
        func = getattr(ActionList, args.action)
    except AttributeError:
        print 'function not found "%s" (%s)' % (args.action)
    else:
        func()


def _parse_args(args):
    parser = _new_argument_parser()
    parsed_args = parser.parse_args(args)
    return parsed_args


def _new_argument_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument("action",
                        help="Action to call")
    return parser


if __name__ == '__main__':
    main()
